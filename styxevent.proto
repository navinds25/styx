syntax = "proto3";

package styxevent;

service Styx {
    rpc FileSearch (SearchFileInfo) returns (FoundFile);
    rpc FileSearchStream(stream SearchFileInfo) returns (stream FoundFile);
    rpc ReqFileTransfer (RequestFileTransfer) returns (Ack);
    rpc PullFile (GetRemoteFile) returns (Ack);

// sftpmgmt functions
    rpc GRPCTest (Ack) returns (Ack);
    rpc AddConfig (SftpTransferConfig) returns (Ack);
    rpc ListConfig (Noparams) returns (stream SftpTransferConfig);
}

message Noparams {}

message Ack {
    string message = 1;
    string error = 2;
}

message SearchFileInfo {
    string jid = 1;
    string type = 2;
    string filename = 3;
    string directory = 4;
    string server = 5;
}

message FoundFile {
    string jid = 1;
    string type = 2;
    string match = 3;
    string regmatch = 4;
    string error = 5;
}

message GetRemoteFile {
    string jid = 1;
    string type = 2;
    string sourcefile = 3;
    string destinationfile = 4;
    string sourceserver = 5;
    string authmethod = 6;
    string username = 7;
    string password = 8;
    string key = 9;
}

message RequestFileTransfer {
    string jid = 1;
    string type = 2;
    string sourcefile = 3;
    string destinationfile = 4;
    string sourceserver = 5;
    string destinationserver = 6;
}

message SftpTransferConfig {
    string transferid = 1;
    string description = 2;
    enum TransferType {
        Pull = 0;
        Push = 1;
    }
    TransferType type = 3;
    string localfile = 4;
    string localpath = 5;
    string remotefile = 6;
    string remotepath = 7;
    string remotehost = 8;
    int32 remoteport = 9;
    string remoteuser = 10;
    string remotepassword = 11;
    string remotekey = 12;
}

// Not using nested grpc messages for simplicity and to avoid using too many different structs.
// Nested message example:
// message rootMessage {
//     message foo {
//         string bar = 1;
//     }   
//}

