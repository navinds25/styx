// Code generated by protoc-gen-go. DO NOT EDIT.
// source: extension.proto

package extension

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecuteExtensionParams struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Arguments            map[string]string `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExecuteExtensionParams) Reset()         { *m = ExecuteExtensionParams{} }
func (m *ExecuteExtensionParams) String() string { return proto.CompactTextString(m) }
func (*ExecuteExtensionParams) ProtoMessage()    {}
func (*ExecuteExtensionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d065b70573ae483, []int{0}
}

func (m *ExecuteExtensionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteExtensionParams.Unmarshal(m, b)
}
func (m *ExecuteExtensionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteExtensionParams.Marshal(b, m, deterministic)
}
func (m *ExecuteExtensionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteExtensionParams.Merge(m, src)
}
func (m *ExecuteExtensionParams) XXX_Size() int {
	return xxx_messageInfo_ExecuteExtensionParams.Size(m)
}
func (m *ExecuteExtensionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteExtensionParams.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteExtensionParams proto.InternalMessageInfo

func (m *ExecuteExtensionParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExecuteExtensionParams) GetArguments() map[string]string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type ExecuteExtensionOutput struct {
	Output               map[string]string `protobuf:"bytes,1,rep,name=output,proto3" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExecuteExtensionOutput) Reset()         { *m = ExecuteExtensionOutput{} }
func (m *ExecuteExtensionOutput) String() string { return proto.CompactTextString(m) }
func (*ExecuteExtensionOutput) ProtoMessage()    {}
func (*ExecuteExtensionOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d065b70573ae483, []int{1}
}

func (m *ExecuteExtensionOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteExtensionOutput.Unmarshal(m, b)
}
func (m *ExecuteExtensionOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteExtensionOutput.Marshal(b, m, deterministic)
}
func (m *ExecuteExtensionOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteExtensionOutput.Merge(m, src)
}
func (m *ExecuteExtensionOutput) XXX_Size() int {
	return xxx_messageInfo_ExecuteExtensionOutput.Size(m)
}
func (m *ExecuteExtensionOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteExtensionOutput.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteExtensionOutput proto.InternalMessageInfo

func (m *ExecuteExtensionOutput) GetOutput() map[string]string {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*ExecuteExtensionParams)(nil), "extension.ExecuteExtensionParams")
	proto.RegisterMapType((map[string]string)(nil), "extension.ExecuteExtensionParams.ArgumentsEntry")
	proto.RegisterType((*ExecuteExtensionOutput)(nil), "extension.ExecuteExtensionOutput")
	proto.RegisterMapType((map[string]string)(nil), "extension.ExecuteExtensionOutput.OutputEntry")
}

func init() { proto.RegisterFile("extension.proto", fileDescriptor_2d065b70573ae483) }

var fileDescriptor_2d065b70573ae483 = []byte{
	// 243 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xad, 0x28, 0x49,
	0xcd, 0x2b, 0xce, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xed, 0x62, 0xe4, 0x12, 0x73, 0xad, 0x48, 0x4d, 0x2e, 0x2d, 0x49, 0x75, 0x85, 0x09, 0x06, 0x24,
	0x16, 0x25, 0xe6, 0x16, 0x0b, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30,
	0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x7e, 0x5c, 0x9c, 0x89, 0x45, 0xe9, 0xa5, 0xb9, 0xa9, 0x79,
	0x25, 0xc5, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x06, 0x7a, 0x08, 0xe3, 0xb1, 0x9b, 0xa4,
	0xe7, 0x08, 0xd3, 0xe2, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x84, 0x30, 0x42, 0xca, 0x86, 0x8b, 0x0f,
	0x55, 0x52, 0x48, 0x80, 0x8b, 0x39, 0x3b, 0xb5, 0x12, 0x6a, 0x29, 0x88, 0x29, 0x24, 0xc2, 0xc5,
	0x5a, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1, 0x04, 0x16, 0x83, 0x70, 0xac, 0x98, 0x2c, 0x18, 0x95,
	0x66, 0x61, 0x71, 0xbc, 0x7f, 0x69, 0x49, 0x41, 0x69, 0x89, 0x90, 0x2b, 0x17, 0x5b, 0x3e, 0x98,
	0x25, 0xc1, 0x08, 0x76, 0xa5, 0x2e, 0x1e, 0x57, 0x42, 0xb4, 0xe8, 0x41, 0x28, 0x88, 0x13, 0xa1,
	0x9a, 0xa5, 0x2c, 0xb9, 0xb8, 0x91, 0x84, 0x49, 0x71, 0x9c, 0x51, 0x1e, 0x97, 0x00, 0xdc, 0x86,
	0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0xa1, 0x28, 0x90, 0x18, 0xaa, 0xe5, 0x42, 0x8a, 0x04,
	0xc3, 0x4f, 0x4a, 0x91, 0xa0, 0xe3, 0x0d, 0x18, 0x9d, 0x78, 0xa3, 0xb8, 0xf5, 0xac, 0xe1, 0xea,
	0x92, 0xd8, 0xc0, 0x51, 0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x5e, 0x26, 0xb1, 0xfd,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExtensionServiceClient is the client API for ExtensionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExtensionServiceClient interface {
	ExecuteExtension(ctx context.Context, in *ExecuteExtensionParams, opts ...grpc.CallOption) (ExtensionService_ExecuteExtensionClient, error)
}

type extensionServiceClient struct {
	cc *grpc.ClientConn
}

func NewExtensionServiceClient(cc *grpc.ClientConn) ExtensionServiceClient {
	return &extensionServiceClient{cc}
}

func (c *extensionServiceClient) ExecuteExtension(ctx context.Context, in *ExecuteExtensionParams, opts ...grpc.CallOption) (ExtensionService_ExecuteExtensionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExtensionService_serviceDesc.Streams[0], "/extension.ExtensionService/ExecuteExtension", opts...)
	if err != nil {
		return nil, err
	}
	x := &extensionServiceExecuteExtensionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExtensionService_ExecuteExtensionClient interface {
	Recv() (*ExecuteExtensionOutput, error)
	grpc.ClientStream
}

type extensionServiceExecuteExtensionClient struct {
	grpc.ClientStream
}

func (x *extensionServiceExecuteExtensionClient) Recv() (*ExecuteExtensionOutput, error) {
	m := new(ExecuteExtensionOutput)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExtensionServiceServer is the server API for ExtensionService service.
type ExtensionServiceServer interface {
	ExecuteExtension(*ExecuteExtensionParams, ExtensionService_ExecuteExtensionServer) error
}

func RegisterExtensionServiceServer(s *grpc.Server, srv ExtensionServiceServer) {
	s.RegisterService(&_ExtensionService_serviceDesc, srv)
}

func _ExtensionService_ExecuteExtension_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecuteExtensionParams)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExtensionServiceServer).ExecuteExtension(m, &extensionServiceExecuteExtensionServer{stream})
}

type ExtensionService_ExecuteExtensionServer interface {
	Send(*ExecuteExtensionOutput) error
	grpc.ServerStream
}

type extensionServiceExecuteExtensionServer struct {
	grpc.ServerStream
}

func (x *extensionServiceExecuteExtensionServer) Send(m *ExecuteExtensionOutput) error {
	return x.ServerStream.SendMsg(m)
}

var _ExtensionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "extension.ExtensionService",
	HandlerType: (*ExtensionServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExecuteExtension",
			Handler:       _ExtensionService_ExecuteExtension_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "extension.proto",
}
